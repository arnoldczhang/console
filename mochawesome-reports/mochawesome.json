{
  "reportTitle": "console-git",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2017-08-01T02:05:52.942Z",
    "end": "2017-08-01T02:05:53.017Z",
    "duration": 75,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "d9c72c10-4670-4625-9add-1d5bdc3f77f8",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "bba78780-f0f7-4346-91a7-b128ee4dd1dd",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "2911389e-7ecc-4500-8a90-c5b0b51fe547",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "9d2ebe65-a6b0-45cc-bbd3-5dfdca01de8c",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "6ead8b25-9e63-4f1b-afed-ea222bf8fdee",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "91d1346b-5ae6-4464-96b9-fcbac96b8c1a",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "7bf2c716-4494-4c6e-9704-c5e88e8bfe35",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "a6d6341b-e0ec-46d1-8fb2-2662c73e429e",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "25d67eb7-a08d-45b5-bd30-e59dc1af4831",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br><span class=\"hljs-keyword\">var</span> obj1 = Structs(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = Structs(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "c09cb5c1-b9b9-4597-986a-e6f5df89a6fd",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "ba6e2554-d2fe-4dc8-a648-88f4726e6f62",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/structsTest.js",
        "uuid": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
        "fullFile": "/Users/dianping/website/console-git/test/structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "d9c72c10-4670-4625-9add-1d5bdc3f77f8",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "bba78780-f0f7-4346-91a7-b128ee4dd1dd",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "2911389e-7ecc-4500-8a90-c5b0b51fe547",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "9d2ebe65-a6b0-45cc-bbd3-5dfdca01de8c",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "6ead8b25-9e63-4f1b-afed-ea222bf8fdee",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "91d1346b-5ae6-4464-96b9-fcbac96b8c1a",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "7bf2c716-4494-4c6e-9704-c5e88e8bfe35",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "a6d6341b-e0ec-46d1-8fb2-2662c73e429e",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "25d67eb7-a08d-45b5-bd30-e59dc1af4831",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br><span class=\"hljs-keyword\">var</span> obj1 = Structs(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = Structs(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "c09cb5c1-b9b9-4597-986a-e6f5df89a6fd",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "ba6e2554-d2fe-4dc8-a648-88f4726e6f62",
            "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 11,
        "totalPasses": 11,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 40
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "e1f56c9f-f92c-4eed-8b15-ae21d5349129",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "e18910fa-abc8-49a4-8ad5-88f1fe3b3db7",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "60a4ef3f-dd4b-4e5a-abb5-67fe358a580f",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "6310a2cf-4bb4-4f4e-bbb9-6443b0f45415",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "8ba9bb43-8c97-4dc9-b079-202c5e535fe4",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "0bd7d1ac-d1d8-4965-83c8-2d7e93eab154",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "65e98c36-574d-4226-b821-faa28c9c5738",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "bc5147b5-7fd5-49b9-a3c5-77812bd5a31f",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "e1d99bb0-b191-4d60-8b48-2d68f372d412",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "3a5d130c-d2fe-4b98-8461-12dee891ab08",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br><span class=\"hljs-keyword\">var</span> obj1 = Structs(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = Structs(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "0579c6af-6981-401c-b00f-74eb680ebaac",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "f6aca646-919b-4b88-9689-a82f4ca21e94",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "15298d39-c288-4cca-a78e-4d2976805d2e",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "41df3352-d0df-4564-8ba6-cbf91d48dd75",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "b7403b24-7345-424d-a8ad-fa2812c164f0",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "c4e92124-4cd1-4194-9fd8-e8ea260f3dfc",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "98134821-0dd6-4499-bb8f-0552c405ca46",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "aac1f741-1bf1-41c6-a3a3-c03324a1d119",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "4a1f2d4c-5257-49fe-8318-35129c2b53ed",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "fc45bd35-98ee-41f9-bd51-ef392c395167",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "89ca6884-0022-475f-9b76-f979b9826e9e",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br><span class=\"hljs-keyword\">var</span> obj1 = Structs(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = Structs(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "2d99a4d4-44e0-4fe6-9e43-4ac16ac59343",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "35bf55e6-9889-4914-a366-b96b6fa274ea",
      "parentUUID": "d8f309b6-62aa-4518-9f3c-abf0a5fd0cd2",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}