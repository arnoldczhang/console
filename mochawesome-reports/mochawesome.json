{
  "reportTitle": "console",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2017-07-29T15:53:11.848Z",
    "end": "2017-07-29T15:53:11.895Z",
    "duration": 47,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col3 = Collection([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> col4 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col4.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>);<br>expect(list === list2).to.be.true;<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> simple = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>list = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>list2 = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br>done();",
            "isRoot": false,
            "uuid": "b8638cee-4a3c-4aae-8678-54e23821fbd3",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><br>done();",
            "isRoot": false,
            "uuid": "62c42725-a595-40b8-83a6-ff11fcd79dc3",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done();",
            "isRoot": false,
            "uuid": "dec78f83-23ea-4ead-8544-66ee2ad310c1",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done();",
            "isRoot": false,
            "uuid": "4ca57fd8-8e4d-43f0-ba1a-889b2b16df09",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "b925677f-1e58-438f-99be-d2dba77ee76f",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\structsTest.js",
        "uuid": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
        "fullFile": "C:\\WORK\\website\\console\\test\\structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col3 = Collection([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> col4 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col4.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>);<br>expect(list === list2).to.be.true;<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> simple = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>list = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>list2 = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br>done();",
            "isRoot": false,
            "uuid": "b8638cee-4a3c-4aae-8678-54e23821fbd3",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><br>done();",
            "isRoot": false,
            "uuid": "62c42725-a595-40b8-83a6-ff11fcd79dc3",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done();",
            "isRoot": false,
            "uuid": "dec78f83-23ea-4ead-8544-66ee2ad310c1",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "done();",
            "isRoot": false,
            "uuid": "4ca57fd8-8e4d-43f0-ba1a-889b2b16df09",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "b925677f-1e58-438f-99be-d2dba77ee76f",
            "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 12
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "8966c50a-e878-44bd-8384-7944ab255da9",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col3 = Collection([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> col4 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col4.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>);<br>expect(list === list2).to.be.true;<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> simple = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>list = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>list2 = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br>done();",
      "isRoot": false,
      "uuid": "357225f0-bb6e-448e-a37f-c5f502142744",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><br>done();",
      "isRoot": false,
      "uuid": "c909c9a1-abec-4b39-a35d-79050be67226",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "done();",
      "isRoot": false,
      "uuid": "6ac60def-49d7-41a6-9279-a1872f1ad321",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "done();",
      "isRoot": false,
      "uuid": "53069597-05f7-49a1-8545-3b72cd4d3b0a",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "751e5322-857a-48c3-94c4-a0ba750a929d",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col3 = Collection([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> col4 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col4.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>);<br>expect(list === list2).to.be.true;<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,{a: <span class=\"hljs-number\">1</span>}, <span class=\"hljs-number\">3</span>,,<span class=\"hljs-number\">4</span>]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> simple = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>list = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>list2 = List([<span class=\"hljs-number\">1</span>, simple,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,,{a:<span class=\"hljs-number\">1</span>}]);<br>expect(list.equals(list2)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br>done();",
      "isRoot": false,
      "uuid": "11373f69-65b4-4905-9715-30930013e617",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><br>done();",
      "isRoot": false,
      "uuid": "b32a6372-8a88-4b2e-87dc-1c21e900fe43",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "done();",
      "isRoot": false,
      "uuid": "e389afad-9ea1-4f32-b67c-99e8a1c5b73c",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "done();",
      "isRoot": false,
      "uuid": "2a47f7d6-5c4d-4db8-bea0-e8580ada2da9",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "925d99a6-dd29-474b-886b-38a5dfac2d22",
      "parentUUID": "968685b0-68fa-438e-9cf6-fd3e77b518a7",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}