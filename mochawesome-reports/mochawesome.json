{
  "reportTitle": "console",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 8,
    "pending": 0,
    "failures": 1,
    "start": "2017-07-30T14:56:21.670Z",
    "end": "2017-07-30T14:56:21.754Z",
    "duration": 84,
    "testsRegistered": 9,
    "passPercent": 88.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "b614da35-b167-40e8-ac8c-ec7898122d2b",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "53fac039-0cb8-4b26-9ee2-bdd533d1997c",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "558bb27b-66b9-4bd8-8d15-4349011e1c8b",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 5,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'bb'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "err": {
              "name": "TypeError",
              "message": "Cannot read property 'get' of undefined",
              "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'get'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">348</span>:<span class=\"hljs-number\">15</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at Collection.setIn (js\\structs.js:<span class=\"hljs-number\">484</span>:<span class=\"hljs-number\">16</span>)<br>    at Collection.updateIn (js\\structs.js:<span class=\"hljs-number\">757</span>:<span class=\"hljs-number\">23</span>)<br>    at Context.&lt;anonymous&gt; (test\\structsTest.js:<span class=\"hljs-number\">190</span>:<span class=\"hljs-number\">20</span>)"
            },
            "isRoot": false,
            "uuid": "ba006561-3079-48bd-bbbe-7afebd44b71d",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "a6012005-2f9b-4291-a153-1c7ff60448a7",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "1a2f5eaf-d8ca-4e88-8147-c413a4f843bc",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "771fc747-b9f5-453f-a741-d7750d0aa106",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "17870653-3012-4995-9efb-63def440dbef",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "87e8690d-5cb6-4f1e-b67d-f401fc7d7950",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\structsTest.js",
        "uuid": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
        "fullFile": "C:\\WORK\\website\\console\\test\\structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "b614da35-b167-40e8-ac8c-ec7898122d2b",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "53fac039-0cb8-4b26-9ee2-bdd533d1997c",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "558bb27b-66b9-4bd8-8d15-4349011e1c8b",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "a6012005-2f9b-4291-a153-1c7ff60448a7",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "1a2f5eaf-d8ca-4e88-8147-c413a4f843bc",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "771fc747-b9f5-453f-a741-d7750d0aa106",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "17870653-3012-4995-9efb-63def440dbef",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "87e8690d-5cb6-4f1e-b67d-f401fc7d7950",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 5,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'bb'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "err": {
              "name": "TypeError",
              "message": "Cannot read property 'get' of undefined",
              "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'get'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">348</span>:<span class=\"hljs-number\">15</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at Collection.setIn (js\\structs.js:<span class=\"hljs-number\">484</span>:<span class=\"hljs-number\">16</span>)<br>    at Collection.updateIn (js\\structs.js:<span class=\"hljs-number\">757</span>:<span class=\"hljs-number\">23</span>)<br>    at Context.&lt;anonymous&gt; (test\\structsTest.js:<span class=\"hljs-number\">190</span>:<span class=\"hljs-number\">20</span>)"
            },
            "isRoot": false,
            "uuid": "ba006561-3079-48bd-bbbe-7afebd44b71d",
            "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 9,
        "totalPasses": 8,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 42
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "86708f61-a557-4fd4-8778-05f56267668f",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "ddd76071-14f8-4e5e-8a11-96066ef62411",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "a7191885-9e08-410d-b788-06525cb8e2e5",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "573e6df5-2352-4f7e-b6b8-9ac20bd5a942",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 5,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'bb'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'get' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'get'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">348</span>:<span class=\"hljs-number\">15</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at Collection.setIn (js\\structs.js:<span class=\"hljs-number\">484</span>:<span class=\"hljs-number\">16</span>)<br>    at Collection.updateIn (js\\structs.js:<span class=\"hljs-number\">757</span>:<span class=\"hljs-number\">23</span>)<br>    at Context.&lt;anonymous&gt; (test\\structsTest.js:<span class=\"hljs-number\">190</span>:<span class=\"hljs-number\">20</span>)"
      },
      "isRoot": false,
      "uuid": "404ce84a-9049-4f13-b912-e098ec34a87d",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "04b2bc30-2776-4e7d-b0f4-790bd0bf8e9c",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "2331c711-b305-4f56-a80e-3747dddda40b",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "6238e4b6-4890-4be1-a4c6-205edc3fe10b",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "dbf96e07-28a1-4567-8c75-6327f68c6fa7",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "2638defb-cdff-4d39-9a44-bf31288de93e",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "af3c6d6f-a3e9-4b81-a584-6103ff9cb005",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "dd3864a0-a205-436a-982c-b832d70a47f6",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "d94ae518-f173-4cfc-b257-15d4493a4c6f",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "b64c1407-4259-47a0-8fcc-d429da90417e",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "6ab36c16-be1c-42ef-ad12-7fe0a8bb9c9e",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "95cb20ac-95d0-48d3-9e9e-ab9a86f4d3a5",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "0c36286a-a5e7-4d14-a9b2-a37f9cc793c0",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "12850da7-4d8d-4170-af04-aeaa9ee73539",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 5,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'bb'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'get' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'get'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">348</span>:<span class=\"hljs-number\">15</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at reduceSet (js\\structs.js:<span class=\"hljs-number\">349</span>:<span class=\"hljs-number\">30</span>)<br>    at Collection.setIn (js\\structs.js:<span class=\"hljs-number\">484</span>:<span class=\"hljs-number\">16</span>)<br>    at Collection.updateIn (js\\structs.js:<span class=\"hljs-number\">757</span>:<span class=\"hljs-number\">23</span>)<br>    at Context.&lt;anonymous&gt; (test\\structsTest.js:<span class=\"hljs-number\">190</span>:<span class=\"hljs-number\">20</span>)"
      },
      "isRoot": false,
      "uuid": "b29689ca-a07e-434d-a406-f180f7526d27",
      "parentUUID": "cb98c9a9-427a-419f-9617-d6ff9cb8049a",
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}