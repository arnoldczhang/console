{
  "reportTitle": "console",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2017-07-31T13:56:27.948Z",
    "end": "2017-07-31T13:56:28.035Z",
    "duration": 87,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "ed513be6-7ab1-42cc-b9b8-90fb4a66dbea",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "d55ed0ac-4569-46e8-b0e7-90e2eff0199b",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "dce48c68-4f24-4535-9281-a0a1c91c2224",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "e9573112-897c-4825-93ba-b592d870cec8",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "3f1b6e77-e57a-47b1-83a9-6ce5398d6128",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "27c4d353-912d-4d25-8f54-691e186a310b",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "d0e697c6-5c50-4394-a0e2-b60b4381f127",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "5434b9ce-9400-426e-9f5e-d9aee8de77cc",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "893c6820-b434-42af-83b0-d37be5946648",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "7e180685-09cb-4bc5-a0f9-be45f2c758bd",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "4c770ff7-b71e-4642-b490-ce45650cd606",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\structsTest.js",
        "uuid": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
        "fullFile": "C:\\WORK\\website\\console\\test\\structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "ed513be6-7ab1-42cc-b9b8-90fb4a66dbea",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "d55ed0ac-4569-46e8-b0e7-90e2eff0199b",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "dce48c68-4f24-4535-9281-a0a1c91c2224",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "e9573112-897c-4825-93ba-b592d870cec8",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "3f1b6e77-e57a-47b1-83a9-6ce5398d6128",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "27c4d353-912d-4d25-8f54-691e186a310b",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "d0e697c6-5c50-4394-a0e2-b60b4381f127",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "5434b9ce-9400-426e-9f5e-d9aee8de77cc",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "893c6820-b434-42af-83b0-d37be5946648",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "7e180685-09cb-4bc5-a0f9-be45f2c758bd",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "4c770ff7-b71e-4642-b490-ce45650cd606",
            "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 11,
        "totalPasses": 11,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 53
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "7a662150-dadf-4a4f-8626-13609603d2d1",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "50a8e326-e8ad-4c4e-8f32-66efa7213dce",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "cd531b6e-8f8a-4d05-87c5-b4663902d70b",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "b1801f7e-c012-445b-9776-c3c0336cebce",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "5b9e77f7-16a6-4476-ae86-213976f4c724",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "15c808ab-d89e-464b-8400-f7a88766bc0b",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "c5dcc5a1-9c11-460b-b287-7014a92a7a54",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "3d986e9b-be75-4e8e-8217-9b82f748938e",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "adabf9f2-dad3-494d-becb-67f2783ea9c4",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "65f82fdd-bc1f-43e4-8a74-11cb78331548",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "24ff76b3-9c53-4af3-bba8-20d4eb7c4e5d",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "920a86e3-42fc-441c-bcb0-540e53690317",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "dfc4422d-8e91-4112-9fa1-16c85ae83e6d",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "9d2cab1c-e287-4c66-a4ba-b6c6e046c1ac",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "51c5907d-b63e-4329-acd2-e4232884a999",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "ec5fe5ea-afaa-4fe7-997d-fb7cff42ff4d",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "3ee6d72a-3d39-48d1-9686-61d553d9fbc3",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "740f571b-6cde-4b97-9206-409e912ace5c",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "8d180ceb-8093-4b0d-aaf2-8fb72069b87c",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "d208ece9-5987-448b-8ca6-668589b435d9",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "8c7ba0a8-ceab-4315-a7e6-370966e89cf7",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "f72d32b6-21e6-46c4-af06-30e6d08d3c38",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "58b8b398-a1b6-43d4-a4c0-6cfd59513a53",
      "parentUUID": "4044bd76-2f7d-4c93-8936-b4e4d40a1dff",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}