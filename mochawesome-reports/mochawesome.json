{
  "reportTitle": "console-git",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2017-07-31T10:05:43.047Z",
    "end": "2017-07-31T10:05:43.121Z",
    "duration": 74,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "424b1b17-f240-464d-be2d-93ecee7be91b",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "5f54c2d0-0516-4ecf-8e04-54215d657b1d",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "d17f6afe-7495-4f12-aaba-5c29d279fe5f",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "2f882ed6-2fda-4fc2-8c25-69c5f4822de2",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "74ebe173-8f45-4f77-ac81-8b6d2fe681ed",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "1f1cea11-3d15-4af3-af15-140cfafb3405",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "56f58ae0-bce3-4bbc-b6ca-72b9198a9877",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "bcba20db-b44b-4383-be93-b38c7b600b6a",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "b7b580a5-00eb-425a-99be-6087f317245f",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "964949e6-590f-4818-a21c-7dbd4d18aea9",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "f8c64dc2-2137-4c32-a80c-9a205aac03bb",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/structsTest.js",
        "uuid": "14c84268-741b-4413-ab67-d57f8509c76f",
        "fullFile": "/Users/dianping/website/console-git/test/structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "424b1b17-f240-464d-be2d-93ecee7be91b",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "5f54c2d0-0516-4ecf-8e04-54215d657b1d",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "d17f6afe-7495-4f12-aaba-5c29d279fe5f",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "2f882ed6-2fda-4fc2-8c25-69c5f4822de2",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "74ebe173-8f45-4f77-ac81-8b6d2fe681ed",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "1f1cea11-3d15-4af3-af15-140cfafb3405",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "56f58ae0-bce3-4bbc-b6ca-72b9198a9877",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "bcba20db-b44b-4383-be93-b38c7b600b6a",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "fromJS",
            "fullTitle": "structs fromJS",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
            "isRoot": false,
            "uuid": "b7b580a5-00eb-425a-99be-6087f317245f",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "equals",
            "fullTitle": "structs equals",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "964949e6-590f-4818-a21c-7dbd4d18aea9",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "f8c64dc2-2137-4c32-a80c-9a205aac03bb",
            "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 11,
        "totalPasses": 11,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 39
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "467ed70b-d513-41a0-baa3-4cf2fd20cbd9",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "4746b644-58fd-4414-b205-26f091f4a762",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "96778d59-051a-4f96-b5a5-6b86a94d0d70",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "67f81bad-90bb-4ae3-89f5-4111e00a6440",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "78307fc2-8f59-4e25-9419-5c4769b95aa2",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "3cb39cac-859b-4f20-82e6-436080f84e0e",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "831c1984-9676-41eb-8fa5-b52a99b64486",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "7f0016b0-5dfc-4ad9-9159-0e587a31b9aa",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "cd9e33ed-a9f2-405c-9fba-c4846b97d4e4",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "a994ed28-f25b-4bb1-9dac-334c68a2f29b",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "f183a975-fe10-41d6-8d7c-37597d364f2c",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "b9ed9a76-2623-45d3-941f-4c9e773a00f3",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "211da1db-bcf0-4b71-8b3b-5be8933486dd",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "cd6a1412-6e08-4ba3-bbea-bc5729e50570",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "4d68176a-af43-4fd8-9539-ab09902ef358",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "2c47c325-b795-44a8-b8c7-497c73f44955",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "6ec13a56-62f3-417a-a8b0-6962656d460d",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "1f49bb55-676a-44e1-b0e1-fa48b3a3d901",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "ad9046c2-94fd-470b-bc9c-49d8644215a8",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "32ac7788-64c7-4095-a95c-6c5af76a9f03",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "fromJS",
      "fullTitle": "structs fromJS",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = fromJS([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-number\">2</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col2 = fromJS({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br>expect(col2.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col2.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col2.get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br><span class=\"hljs-keyword\">var</span> col3 = fromJS([<span class=\"hljs-number\">1</span>,,,<span class=\"hljs-number\">3</span>, {a: <span class=\"hljs-number\">1</span>, b: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, {c: <span class=\"hljs-number\">11</span>, d: <span class=\"hljs-number\">121</span>}]}]);<br>expect(col3.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-literal\">undefined</span>);<br>expect(col3.get(<span class=\"hljs-number\">3</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'a'</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">0</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'c'</span>)).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span>])).to.be.equal(<span class=\"hljs-number\">11</span>);<br>expect(col3.getIn([<span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'b'</span>]).get(<span class=\"hljs-number\">2</span>).get(<span class=\"hljs-string\">'d'</span>)).to.be.equal(<span class=\"hljs-number\">121</span>);<br>done();",
      "isRoot": false,
      "uuid": "65739957-c3a8-41bd-9d3b-ff1b9be2e126",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "equals",
      "fullTitle": "structs equals",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> obj1 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">11</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj2 = {<br>  a: <span class=\"hljs-number\">1</span>,<br>  b: <span class=\"hljs-number\">2</span>,<br>  c: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>, {<br>    d: <span class=\"hljs-number\">1</span>,<br>    e: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],<br>    f: {<br>      g: {<br>        h: <span class=\"hljs-number\">1</span><br>      }<br>    }<br>  }]<br>};<br><span class=\"hljs-keyword\">var</span> obj1 = fromJS(obj1);<br><span class=\"hljs-keyword\">var</span> obj2 = fromJS(obj2);<br>expect(obj1.equals(obj2)).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "fd373eac-2009-4930-8649-2d8a51c1006e",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "1892d5e9-7593-492b-859a-7664598d23f2",
      "parentUUID": "14c84268-741b-4413-ab67-d57f8509c76f",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}