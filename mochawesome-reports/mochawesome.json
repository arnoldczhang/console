{
  "reportTitle": "console-git",
  "reportPageTitle": "Mochawesome Report Card",
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2017-07-31T02:01:29.933Z",
    "end": "2017-07-31T02:01:30.009Z",
    "duration": 76,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "structs",
        "suites": [],
        "tests": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "bd3acfc7-7e10-4464-96ec-3d2dbf4a4d7d",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "9a120f59-4d95-46f3-8548-64bd8cbe5fce",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "0fb5cde8-9fec-440a-b09e-abc85643fa95",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "d8231f01-5921-479b-a7f1-5924add0d36b",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "005cf743-42c8-4791-9d36-b5ddb6129a61",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "04bf1154-510a-4dcc-b7cd-e36bd56ef52f",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "6b5efb17-95f5-4480-ab41-85b7a7b67ebb",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "da433702-bbc7-475f-baca-68083b730db2",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "d8840d1d-962a-4b93-b8b3-6a31df5a4bfb",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/structsTest.js",
        "uuid": "63235d73-32aa-46fb-9d01-dc6412f38258",
        "fullFile": "/Users/dianping/website/console-git/test/structsTest.js",
        "passes": [
          {
            "title": "length",
            "fullTitle": "structs length",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
            "isRoot": false,
            "uuid": "bd3acfc7-7e10-4464-96ec-3d2dbf4a4d7d",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "get(In)",
            "fullTitle": "structs get(In)",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
            "isRoot": false,
            "uuid": "9a120f59-4d95-46f3-8548-64bd8cbe5fce",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "set(In)",
            "fullTitle": "structs set(In)",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
            "isRoot": false,
            "uuid": "0fb5cde8-9fec-440a-b09e-abc85643fa95",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "update(In)",
            "fullTitle": "structs update(In)",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
            "isRoot": false,
            "uuid": "d8231f01-5921-479b-a7f1-5924add0d36b",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "has(In)",
            "fullTitle": "structs has(In)",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
            "isRoot": false,
            "uuid": "005cf743-42c8-4791-9d36-b5ddb6129a61",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "includes",
            "fullTitle": "structs includes",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
            "isRoot": false,
            "uuid": "04bf1154-510a-4dcc-b7cd-e36bd56ef52f",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "reduce",
            "fullTitle": "structs reduce",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
            "isRoot": false,
            "uuid": "6b5efb17-95f5-4480-ab41-85b7a7b67ebb",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "first/last",
            "fullTitle": "structs first/last",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
            "isRoot": false,
            "uuid": "da433702-bbc7-475f-baca-68083b730db2",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          },
          {
            "title": "error",
            "fullTitle": "structs error",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
            "isRoot": false,
            "uuid": "d8840d1d-962a-4b93-b8b3-6a31df5a4bfb",
            "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 9,
        "totalPasses": 9,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 42
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "36232158-da3d-4992-8dbf-47d101e77aa3",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "539ea669-d4cf-4965-940f-ded823d0a4e8",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "e0612d6e-a3da-400e-99f7-5d15138f8b14",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "423f1038-4cfb-415d-84bf-bf70cf1ecccb",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "b2f2f391-936a-4da4-8fe9-50159d50ce80",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "a1acc3e4-092b-470c-992e-cfd03a77d758",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "af542c7e-aec4-4c72-963b-aa857c9d9c8e",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "35913630-7ea7-4297-9068-29254d74d3f2",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "d4db2956-f889-40a3-aa27-c9419cc8a9e2",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "6e8e9e76-37b7-42bb-a6e5-4a3a136aec99",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "length",
      "fullTitle": "structs length",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> col2 = Collection([<span class=\"hljs-number\">1</span>]);<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> col2 = Collection({a: <span class=\"hljs-number\">2</span>});<br>expect(col.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(col.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(col2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = List([<span class=\"hljs-number\">1</span>]);<br>expect(list.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(list2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-number\">3</span>});<br><span class=\"hljs-keyword\">var</span> map2 = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">2</span>});<br>expect(map.size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(List(map.get(<span class=\"hljs-string\">'a'</span>)).size).to.be.equal(<span class=\"hljs-number\">3</span>);<br>expect(map2.size).to.be.equal(<span class=\"hljs-number\">1</span>);<br>done();",
      "isRoot": false,
      "uuid": "b08cf166-1d08-4913-93c5-18671d80637a",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "get(In)",
      "fullTitle": "structs get(In)",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(col.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(col.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.get(<span class=\"hljs-string\">'a'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(map.get(<span class=\"hljs-string\">'b'</span>)).to.be.equal(<span class=\"hljs-number\">2</span>);<br>expect(map.get(<span class=\"hljs-string\">'c'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}));<br>expect(map.getIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-number\">10</span>);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.get(<span class=\"hljs-string\">'0'</span>)).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.get(<span class=\"hljs-string\">'1'</span>)).to.be.deep.equal(List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">0</span>])).to.be.deep.equal([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})]));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>])).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>])).to.be.deep.equal(Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>}));<br>expect(list.getIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.equal(<span class=\"hljs-string\">'abc'</span>);<br>done();",
      "isRoot": false,
      "uuid": "ca41247c-b7e6-4a7e-a83a-009746966584",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "set(In)",
      "fullTitle": "structs set(In)",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.set(<span class=\"hljs-number\">5</span>, Collection({a: <span class=\"hljs-number\">1</span>}))).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>,,,Collection({a: <span class=\"hljs-number\">1</span>})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.set(<span class=\"hljs-string\">'c'</span>, Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>]))).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: Collection([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>])}));<br>expect(col).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(col).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.setIn([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-string\">'aaabbb'</span>)).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'aaabbb'</span>})})])])]));<br>expect(list).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">10000</span>)).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10000</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>done();",
      "isRoot": false,
      "uuid": "2c3eeb2a-6ee5-4ecd-a37c-88bb9d0e2381",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "update(In)",
      "fullTitle": "structs update(In)",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch * <span class=\"hljs-number\">100</span>;<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-number\">200</span>);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.get(<span class=\"hljs-number\">2</span>);<br>});<br>expect(list2).to.be.deep.equal([<span class=\"hljs-number\">1</span>]);<br><span class=\"hljs-keyword\">var</span> list2 = list.update(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aaa'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>});<br>expect(list2.get(<span class=\"hljs-number\">1</span>)).to.be.equal(<span class=\"hljs-string\">'aaa'</span>);<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">collect</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> collect;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(col.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.update(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">list</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> list;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]));<br>expect(list.update(<span class=\"hljs-number\">2</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">10</span>;<br>})).to.be.deep.equal(List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">13</span>]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.update(<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>}), b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>});<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: <span class=\"hljs-built_in\">Map</span>({aaa:<span class=\"hljs-number\">111</span>})}));<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(col.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(col.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> col = Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(col.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(Collection([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.updateIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">101</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">102</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>, bb: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.updateIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch + <span class=\"hljs-number\">100</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">110</span>}),<span class=\"hljs-number\">3</span>])}));<br>expect(map.update(<span class=\"hljs-string\">'dd'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br>expect(map.updateIn([<span class=\"hljs-string\">'dd'</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">col</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">123</span>;<br>})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>]), dd: <span class=\"hljs-number\">123</span>}));<br><span class=\"hljs-keyword\">var</span> list = List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]);<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">0</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.set(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">100</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'a'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">100</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'b'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">100</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'0'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">100</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>], Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]));<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,Collection([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]),<span class=\"hljs-number\">3</span>])})]));<br>expect(list.updateIn([<span class=\"hljs-number\">1</span>], <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">ch</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> ch.setIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'aa'</span>], <span class=\"hljs-number\">100</span>);<br>})).to.be.deep.equal(List([List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">5</span>]), <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">100</span>}),<span class=\"hljs-number\">3</span>])})]));<br>done();",
      "isRoot": false,
      "uuid": "7375c001-055a-4d33-ab8f-2d2fa8f79062",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "has(In)",
      "fullTitle": "structs has(In)",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(col.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(col.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br>expect(list.has(<span class=\"hljs-number\">1</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">2</span>)).to.be.true;<br>expect(list.has(<span class=\"hljs-number\">4</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.has(<span class=\"hljs-string\">'a'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'b'</span>)).to.be.true;<br>expect(map.has(<span class=\"hljs-string\">'d'</span>)).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> col = Collection([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(col.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, List([[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], List([<span class=\"hljs-number\">1</span>, Collection({a:<span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">3</span>, c: <span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-string\">'abc'</span>})})])])]);<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'a'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(list.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> map = <span class=\"hljs-built_in\">Map</span>({a: <span class=\"hljs-number\">1</span>, b: <span class=\"hljs-number\">2</span>, c: List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">Map</span>({aa: <span class=\"hljs-number\">10</span>}),<span class=\"hljs-number\">3</span>])});<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'c'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'aa'</span>])).to.be.true;<br>expect(map.hasIn([<span class=\"hljs-string\">'d'</span>])).to.be.false;<br>done();",
      "isRoot": false,
      "uuid": "31c58c3a-777b-4464-9597-fc47f35d9ddb",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "includes",
      "fullTitle": "structs includes",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, [<span class=\"hljs-number\">1</span>]]);<br>expect(list.includes([<span class=\"hljs-number\">1</span>])).to.be.false;<br><span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([li, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);<br>expect(list.includes(li)).to.be.true;<br>done();",
      "isRoot": false,
      "uuid": "6c4e5ea3-b6cf-41a4-aeaf-09156dee7f89",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "reduce",
      "fullTitle": "structs reduce",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]);<br>expect(list.reduce(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">a,b</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> a + b + <span class=\"hljs-keyword\">this</span>.a;<br>}, <span class=\"hljs-number\">100</span>, {<br>    a: <span class=\"hljs-number\">100</span><br>})).to.be.equal(<span class=\"hljs-number\">510</span>);<br>done();",
      "isRoot": false,
      "uuid": "d3f5b06b-544b-4f0e-bf76-63cff5ba435b",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "first/last",
      "fullTitle": "structs first/last",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> li = List([<span class=\"hljs-number\">3</span>]);<br><span class=\"hljs-keyword\">var</span> list = List([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, li]);<br>expect(list.first()).to.be.equal(<span class=\"hljs-number\">1</span>);<br>expect(list.last()).to.be.equal(li);<br>done();",
      "isRoot": false,
      "uuid": "ca8e3bee-868a-4bf8-9d77-008da6496d77",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    },
    {
      "title": "error",
      "fullTitle": "structs error",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Collection({})).to.be.deep.equal(Collection({}));<br>expect(Collection([])).to.be.deep.equal(Collection([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    List({});<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of array'</span>);<br>expect(List([])).to.be.deep.equal(List([]));<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">Map</span>([]);<br>}).to.throw(<span class=\"hljs-string\">'args[0] is not type of object'</span>);<br>expect(<span class=\"hljs-built_in\">Map</span>({})).to.be.deep.equal(<span class=\"hljs-built_in\">Map</span>({}));<br>done();",
      "isRoot": false,
      "uuid": "082e5175-1cf5-4024-a14b-73bba9b5dbd1",
      "parentUUID": "63235d73-32aa-46fb-9d01-dc6412f38258",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}